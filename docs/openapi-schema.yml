openapi: 3.0.3
info:
  description: 'Construction API'
  version: 0.1
paths:
  /api/auth/token/login/:
    post:
      operationId: TokenLogin
      description: Use this endpoint to obtain user authentication token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/auth/token/logout/:
    post:
      operationId: TokenLogout
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/users/:
    post:
      operationId: CreateUser
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/parent-categories/:
    get:
      operationId: GetParentCategoriesList
      description: Получение списка родительских категорий
      parameters:
      - in: path
        name: type
        schema:
          oneOf:
            - title: CONSTRUCTION
              description: Конструкция
            - title: ELEMENT
              description: Элемент
        description: Тип родительской категории
        required: true
      tags:
      - parent-categories
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParentCategory'
          description: ''
    post:
      operationId: CreateParentCategory
      description: Создание родительской категории
      tags:
      - parent-categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParentCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParentCategory'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentCategory'
          description: ''
  /api/parent-categories/{id}/:
    get:
      operationId: GetParentCategory
      description: Получение родительской категории по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `ParentCategory`.
        required: true
      tags:
      - parent-categories
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentCategoryDetail'
          description: ''
  /api/categories/:
    post:
      operationId: CreateCategory
      description: Создание категории
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: GetCategory
      description: Получение категории по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Category`.
        required: true
      tags:
      - categories
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetail'
          description: ''
  /api/subcategories/:
    post:
      operationId: CreateSubCategory
      description: Создание подкатегории
      tags:
      - subcategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubCategory'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategory'
          description: ''
  /api/subcategories/{id}/:
    get:
      operationId: GetSubCategory
      description: Получение подкатегории по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `SubCategory`.
        required: true
      tags:
      - subcategories
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategoryDetail'
          description: ''
  /api/clients/:
    get:
      operationId: GetClientsList
      description: Получение списка клиентов
      parameters:
      - in: path
        name: name
        schema:
          type: string
        description: Имя клиента
      tags:
      - clients
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
    post:
      operationId: CreateClient
      description: Добавление клиента
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/clients/{id}/:
    get:
      operationId: GetClient
      description: Получение клиента по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Клиент.
        required: true
      tags:
      - clients
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
          description: ''
    delete:
      operationId: DeleteClient
      description: Удаление клиента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Клиент.
        required: true
      tags:
      - clients
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/constructions/:
    get:
      operationId: GetConstructionsList
      description: Получение списка конструкций
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: Название конструкции
      tags:
      - constructions
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Construction'
          description: ''
    post:
      operationId: CreateConstruction
      description: Создание конструкции
      tags:
      - constructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Construction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Construction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Construction'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionDetail'
          description: ''
  /api/constructions/{id}/:
    get:
      operationId: GetConstruction
      description: Получение конструкции по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Конструкции`.
        required: true
      tags:
      - constructions
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionDetail'
          description: ''
    patch:
      operationId: UpdateConstruction
      description: Редактирование конструкции и обновление списка элементов конструкции
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Конструкция.
        required: true
      tags:
      - constructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConstructionDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConstructionDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConstructionDetail'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstructionDetail'
          description: ''
    delete:
      operationId: DeleteConstruction
      description: Удаление конструкции
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Конструкция.
        required: true
      tags:
      - constructions
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/constructions/{id}/clone/:
    post:
      operationId: CloneConstruction
      description: Клонирование конструкции по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Конструкции`.
        required: true
      tags:
      - constructions
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/elements/:
    get:
      operationId: GetElementsList
      description: Получение списка элементов
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: Название элемента
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Element'
          description: ''
    post:
      operationId: CreateElement
      description: Создание элемента
      tags:
      - elements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Element'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Element'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Element'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
          description: ''
  /api/elements/{id}/:
    get:
      operationId: GetElement
      description: Получение элемента по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Элемента`.
        required: true
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
          description: ''
    patch:
      operationId: UpdateElement
      description: Редактирование элемента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Элемента`.
        required: true
      tags:
      - elements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedElement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedElement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedElement'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
          description: ''
    delete:
      operationId: DeleteElement
      description: Удаление элемента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Элемента`.
        required: true
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/elements/import/:
    post:
      operationId: ImportElements
      description: Импорт элементов из `xlsx` файла
      tags:
      - elements
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
      - tokenAuth: []
      - {}
  /api/elements/export/:
    post:
      operationId: ExportElements
      description: Экспорт элементов в `xlsx` файл
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: "Список id элементов"
                  items:
                    type: integer
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: Файл в формате `xlsx`
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: file
                format: binary
  /api/elements/filter/:
    get:
      operationId: GetFilteredElements
      description: Получение списка элементов сгруппированных по подкатегориям
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: Название элемента
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  - type: object
                    properties:
                      title:
                        type: string
                      items:
                        type: array
                        items:
                          - type: object
                            properties:
                              id:
                                type: integer
                                readOnly: true
                              title:
                                type: string
                                description: Название
                                maxLength: 60
                              measure:
                                type: string
                                description: Единицы измерения
                                maxLength: 30
                              second_measure:
                                type: string
                                description: Доп. ед. измерения
                                maxLength: 30
                              cost:
                                type: integer
                                maximum: 2147483647
                                minimum: 0
                                description: Себестоимость
                              price:
                                type: integer
                                maximum: 2147483647
                                minimum: 0
                                description: Цена
                              type:
                                allOf:
                                - $ref: '#/components/schemas/ElementTypeEnum'
                                description: Тип
                              dimension:
                                type: string
                                description: Размер
                                maxLength: 60
                              conversion_rate:
                                type: integer
                                maximum: 2147483647
                                minimum: 0
                                description: Норма конвертации
                              parent_category_id:
                                type: integer
                                description: Родительская категория
                              category_id:
                                type: integer
                                nullable: true
                                description: Категория
                              subcategory_id:
                                type: integer
                                nullable: true
                                description: ID подкатегории
                              subcategory_title:
                                type: integer
                                nullable: true
                                description: Название подкатегории
  /api/elements/{id}/clone/:
    post:
      operationId: CloneElement
      description: Клонирование элемента по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Элемента`.
        required: true
      tags:
      - elements
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/projects/:
    get:
      operationId: GetProjectsList
      description: Получение списка проектов
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: CreateProject
      description: Создание проекта
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProject'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProject'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: GetProject
      description: Получение проекта по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
    patch:
      operationId: UpdateProject
      description: Редактирование проекта
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: DeleteProject
      description: Удаление проекта
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/projects/{id}/update-price:
    get:
      operationId: UpdateProjectPrices
      description: Обновление цен в проекте
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
  /api/projects/{id}/clone/:
    post:
      operationId: CloneProject
      description: Клонирование проекта по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Проекта`.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/projects/{id}/excel/foreman:
    get:
      operationId: GetProjectExcelForeman
      description: Получение excel таблицы для `Бригадира`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Проекта`.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: A Excel file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: file
                format: binary
  /api/projects/{id}/excel/estimate:
    get:
      operationId: GetProjectExcelEstimate
      description: Получение excel таблицы для `Заказчика`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Проекта`.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: A Excel file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: file
                format: binary
  /api/projects/{id}/excel/purchaser:
    get:
      operationId: GetProjectExcelPurchaser
      description: Получение excel таблицы для `Закупщика`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Проекта`.
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: A Excel file
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: file
                format: binary
  /api/projects/{id}/stages/:
    post:
      operationId: CreateProjectStage
      description: Добавление этапа проекта
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Стадия проекта.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectStage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectStage'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStage'
          description: ''
  /api/projects/{id}/stages/{stage_id}/:
    patch:
      operationId: UpdateProjectStage
      description: Обновление этапа проекта и добавление конструкций
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      - in: path
        name: stage_id
        schema:
          type: string
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStageDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectStageDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectStageDetail'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStageDetail'
          description: ''
    delete:
      operationId: DeleteProjectStage
      description: Удаление этапа проекта
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Проект.
        required: true
      - in: path
        name: stage_id
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/templates/:
    get:
      operationId: GetTemplatesList
      description: Получение списка шаблонов
      parameters:
      - in: path
        name: title
        schema:
          type: string
        description: Название шаблона
      tags:
      - templates
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
          description: ''
    post:
      operationId: CreateTemplate
      description: Добавление шаблона
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Template'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
  /api/templates/{id}/:
    get:
      operationId: GetTemplate
      description: Получение шаблона по pk
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Шаблон.
        required: true
      tags:
      - templates
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDetail'
          description: ''
    patch:
      operationId: UpdateTemplate
      description: Редактирование шаблона
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Шаблон.
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTemplate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
    delete:
      operationId: DeleteTemplate
      description: Удаление шаблона
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Шаблон.
        required: true
      tags:
      - templates
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/templates/{id}/clone/:
    post:
      operationId: CloneTemplate
      description: Клонирование шаблона по `pk`
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Шаблона`.
        required: true
      tags:
      - templates
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/templates/{id}/stages/:
    post:
      operationId: CreateTemplateStage
      description: Добавление этапа шаблона
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Стадия шаблона.
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateStageCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateStageCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateStageCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateStageCreate'
          description: ''
  /api/templates/{id}/stages/{stage_id}/:
    patch:
      operationId: UpdateTemplateStage
      description: Добавление конструкций к этапу шаблона
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для `Шаблона`.
        required: true
      - in: path
        name: stage_id
        schema:
          type: string
        required: true
      tags:
      - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateStagePatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateStagePatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateStagePatch'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateStagePatch'
          description: ''
    delete:
      operationId: DeleteTemplateStage
      description: Удаление этапа шаблона
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Уникальный индентификатор для Шаблона.
        required: true
      - in: path
        name: stage_id
        schema:
          type: string
        description: Уникальный индентификатор для `Стадии шаблона`.
        required: true
      tags:
      - templates
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ParentCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
          description: Категории
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        type:
          allOf:
          - $ref: '#/components/schemas/ParentCategoryTypeEnum'
          description: Тип
      required:
      - description
      - id
      - categories
      - title
      - type
    ParentCategoryDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
          description: Категории
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        type:
          allOf:
          - $ref: '#/components/schemas/ParentCategoryTypeEnum'
          description: Тип
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Element'
          readOnly: true
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/Construction'
          readOnly: true
      required:
      - description
      - id
      - categories
      - title
      - type
    ParentCategoryTypeEnum:
      enum:
      - CONSTRUCTION
      - ELEMENT
      type: string
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        parent_category:
          type: integer
          description: Родительская категория
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SubCategory'
          readOnly: true
          description: Подкатегории
      required:
      - description
      - id
      - parent_category
      - title
    CategoryDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        parent_category:
          type: integer
          description: Родительская категория
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Element'
          readOnly: true
          description: Элементы
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/Construction'
          readOnly: true
          description: Конструкции
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SubCategory'
          readOnly: true
          description: Подкатегории
      required:
      - description
      - id
      - parent_category
      - title
    SubCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        category:
          type: integer
          description: Категория
      required:
      - description
      - id
      - category
      - title
    SubCategoryDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        image:
          type: string
          format: uri
          description: Фото
        category:
          type: integer
          description: Категория
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Element'
          readOnly: true
          description: Элементы
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/Construction'
          readOnly: true
          description: Конструкции
      required:
      - description
      - id
      - category
      - title
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Имя
          maxLength: 60
        url:
          type: string
          description: Ссылка
      required:
      - id
      - name
      - url
    ClientDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Имя
          maxLength: 60
        url:
          type: string
          description: Ссылка
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
    Construction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        parent_category:
          type: integer
          description: Родительская категория
        category:
          type: integer
          nullable: true
          description: Категория
        subcategory:
          type: integer
          nullable: true
          description: Подкатегория
        documents:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - parent_category
      - id
      - measure
      - title
    ConstructionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        parent_category:
          type: integer
          description: Родительская категория
        category:
          type: integer
          nullable: true
          description: Категория
        subcategory:
          type: integer
          nullable: true
          description: Подкатегория
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ConstructionElement'
        documents:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - parent_category
      - documents
      - id
      - measure
      - title
    ConstructionElement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        price:
          type: integer
          description: Цена
          readOnly: true
        cost:
          type: integer
          description: Себестоимость
          readOnly: true
        measure:
          type: string
          description: Единица измерения
          readOnly: true
        consumption:
          type: number
          format: double
          description: Норма расхода
        element:
          type: integer
          description: Элемент
        construction:
          type: integer
          description: Конструкция
      required:
      - construction
      - element
      - id
      - title
    Element:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        documents:
          type: array
          items:
            type: string
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        second_measure:
          type: string
          description: Доп. ед. измерения
          maxLength: 30
        cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Себестоимость
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Цена
        type:
          allOf:
          - $ref: '#/components/schemas/ElementTypeEnum'
          description: Тип
        dimension:
          type: string
          description: Размер
          maxLength: 60
        conversion_rate:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Норма конвертации
        parent_category:
          type: integer
          description: Родительская категория
        category:
          type: integer
          nullable: true
          description: Категория
        subcategory:
          type: integer
          nullable: true
          description: Подкатегория
      required:
      - parent_category
      - conversion_rate
      - documents
      - id
      - measure
      - second_measure
      - title
      - type
    ElementTypeEnum:
      type: string
      enum:
      - MATERIAL
      - JOB
      type: string
    PatchedConstructionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        parent_category:
          type: integer
          description: Родительская категория
        category:
          type: integer
          description: Категория
        subcategory:
          type: integer
          nullable: true
          description: Подкатегория
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ConstructionElement'
        documents:
          type: array
          description: Документы
          items:
            type: string
            format: binary
        documents_urls:
          type: array
          description: название файлов документов для удаления
          items:
            type: string
    PatchedElement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        second_measure:
          type: string
          description: Доп. ед. измерения
          maxLength: 30
        cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Себестоимость
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Цена
        type:
          allOf:
          - $ref: '#/components/schemas/ElementTypeEnum'
          description: Тип
        dimension:
          type: string
          description: Размер
          maxLength: 60
        conversion_rate:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Норма конвертации
        parent_category:
          type: integer
          description: Родительская категория
        category:
          type: integer
          nullable: true
          description: Категория
        subcategory:
          type: integer
          nullable: true
          description: Подкатегория
        documents:
          type: array
          description: Документы
          items:
            type: string
            format: binary
        documents_urls:
          type: array
          description: название файлов документов для удаления
          items:
            type: string
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        author:
          type: string
          description: Автор
          maxLength: 60
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Статус
        client:
          type: integer
          description: Клиент
        documents:
          type: array
          description: Документы
          items:
            type: string
            format: binary
        documents_urls:
          type: array
          description: название файлов документов для удаления
          items:
            type: string
    PatchedTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Адрес электронной почты
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
    CreateProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        author:
          type: string
          description: Автор
          maxLength: 60
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Статус
        template:
          type: integer
          description: Шаблон
        client:
          type: integer
          description: Клиент
        documents:
          type: array
          description: Документы
          items:
            type: string
            format: binary
      required:
      - author
      - client
      - description
      - status
      - title
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        author:
          type: string
          description: Автор
          maxLength: 60
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Статус
        client:
          type: string
          description: Клиент
          readOnly: True
        price:
          type: integer
          description: Стоимость
      required:
      - author
      - client
      - description
      - id
      - status
      - title
    ProjectDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        author:
          type: string
          description: Автор
          maxLength: 60
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Статус
        client:
          type: integer
          description: Клиент
        price:
          type: integer
          description: Стоимость
        documents:
          type: array
          description: Документы
          items:
            type: string
            format: binary
        stages:
          type: array
          items:
            - $ref: '#/components/schemas/ProjectStageDetail'
      required:
      - author
      - client
      - description
      - id
      - status
      - title
    ProjectConstruction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        price:
          type: integer
          description: Стоимость
        cost:
          type: integer
          description: Себестоимость
        count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Количество
        construction:
          type: integer
          description: Шаблонная `Конструкция`
        elements:
          type: array
          items:
            $ref: '#/components/schemas/ProjectConstructionElement'
      required:
      - id
      - title
      - measure
      - construction
      - count
      - price
      - cost
      - measure
      - title
      - elements
    ProjectConstructionElement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        second_measure:
          type: string
          description: Доп. ед. измерения
          maxLength: 30
        cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Себестоимость
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Цена
        type:
          allOf:
          - $ref: '#/components/schemas/ElementTypeEnum'
          description: Тип
        dimension:
          type: string
          description: Размер
          maxLength: 60
        conversion_rate:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Норма конвертации
        consumption:
          type: number
          format: double
          description: Норма расхода
        count:
          type: integer
          description: Количество
        element:
          type: integer
          description: Шаблонный `Элемент`
      required:
      - id
      - title
      - type
      - measure
      - second_measure
      - conversation_rate
      - dimension
      - consumption
      - count
      - price
      - cost
      - element
    ProjectStage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        project:
          type: integer
          description: Проект
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Порядковый номер
      required:
      - id
      - order
      - project
      - title
    ProjectStageDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        project:
          type: integer
          description: Проект
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Порядковый номер
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/ProjectConstruction'
    StatusEnum:
      oneOf:
      - title: FINISH
        description: Проект закончен
      - title: WORK
        description: Проект в работе
      - title: NOT_START
        description: Проект не начат
      type: string
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        created_at:
          type: string
          format: date
          description: Дата добавления
      required:
      - description
      - id
      - title
    TemplateDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        created_at:
          type: string
          format: date
          description: Дата добавления
        stages:
          type: array
          items:
            - $ref: '#/components/schemas/ProjectStageDetail'
      required:
      - description
      - id
      - title
    TemplateConstruction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        title:
          type: string
          description: Название
          maxLength: 60
        description:
          type: string
          description: Описание
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        price:
          type: integer
          description: Стоимость
        cost:
          type: integer
          description: Себестоимость
        count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Количество
        construction:
          type: integer
          description: Шаблонная `Конструкция`
        elements:
          type: array
          items:
            $ref: '#/components/schemas/TemplateConstructionElement'
      required:
      - id
      - title
      - measure
      - construction
      - count
      - price
      - cost
      - measure
      - title
      - elements
    TemplateConstructionElement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        measure:
          type: string
          description: Единицы измерения
          maxLength: 30
        second_measure:
          type: string
          description: Доп. ед. измерения
          maxLength: 30
        cost:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Себестоимость
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Цена
        type:
          allOf:
          - $ref: '#/components/schemas/ElementTypeEnum'
          description: Тип
        dimension:
          type: string
          description: Размер
          maxLength: 60
        conversion_rate:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Норма конвертации
        consumption:
          type: number
          format: double
          description: Норма расхода
        count:
          type: integer
          description: Количество
        element:
          type: integer
          description: Шаблонный `Элемент`
      required:
      - id
      - title
      - type
      - measure
      - second_measure
      - conversation_rate
      - dimension
      - consumption
      - count
      - price
      - cost
      - element
    TemplateStageCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        template:
          type: integer
          description: Шаблон
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Порядковый номер
      required:
      - id
      - order
      - template
      - title
    TemplateStagePatch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Название
          maxLength: 60
        template:
          type: integer
          description: Шаблон
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Порядковый номер
        constructions:
          type: array
          items:
            $ref: '#/components/schemas/TemplateConstruction'
      required:
      - constructions
      - id
      - order
      - template
      - title
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Адрес электронной почты
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
      required:
      - id
      - username
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Адрес электронной почты
          maxLength: 254
        username:
          type: string
          description: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
